import java.util.ArrayList;
import java.util.Scanner;

class Person{

	Scanner in = new Scanner(System.in);

    //data fields
    protected StringBuilder name, address, phone, email; 
    protected static short id_gen = 1000;
    protected short id_num;
    
	/*
	Type -> no-arguments constructor
	Input -> none
	Output -> none
	Purpose -> to initialise variables
	*/
    public Person()
	{
		name = new StringBuilder("");
		address = new StringBuilder("");
		phone = new StringBuilder("");
		email = new StringBuilder("");
		//id_num is generated by adding one to the former id_gen. id_gen starts at 1000 by choice
		id_num = ++id_gen;
	}

    /*
	Type -> accessor
	Input -> none
	Output -> name: String
	Purpose -> to return the person's name
	*/
    public StringBuilder get_name() 
	{
  		return name;
	}


    /*
	Type -> accessors
	Input -> none
	Output -> id_num: short
	Purpose -> to return the person's id number
	*/
	public short get_id() 
	{
		return id_num;
	}

    /*
	Type -> accessor
	Input -> none
	Output -> phone: String
	Purpose -> to return the person's phone number
	*/
	public StringBuilder get_phone() 
	{
		return phone;
	}

    /*
	Type -> accessor
	Input -> none
	Output -> email: string
	Purpose -> to return the person's email
	*/
	public StringBuilder get_email() 
	{
		return email;
	}

	/*
	Type -> mutators
	Input -> nName: String
	Output -> none
	Purpose -> to change the person's name
	*/
    public void set_name(StringBuilder nName)
	{
		name = nName;
	}

	/*
	Type -> mutators
	Input -> nPhone: String
	Output -> none
	Purpose -> to change the person's phone number
	*/
    public void set_phone(StringBuilder nPhone)
	{
		phone = nPhone;
	}

	/*
	Type -> mutators
	Input -> email: String
	Output -> none
	Purpose -> to change the person's email
	*/
    public void set_email(StringBuilder nEmail)
	{
		email = nEmail;
	} 

	/*
	Type -> mutators
	Input -> type: ArrayList<String>, name: String 
	Output -> none
	Purpose -> to add name to the person's ArrayList
	*/
    public void add_course(ArrayList<StringBuilder> type, StringBuilder name)
	{
		type.add(name);
	}

	/*
	Type -> mutators
	Input -> type: ArrayList<String>, name: String 
	Output -> none
	Purpose -> to remove name from the person's ArrayList
	*/
    public void remove_course(ArrayList<StringBuilder> type, StringBuilder name)
	{
		type.remove(name);
	}

    /*
	Type -> enter
	Input -> none
	Output -> none
	Purpose -> to fill the details of a Person
	*/
    public void enter()
	{
		String x;
		//cin.ignore(); find out how to implemnt
		//char xy = in.next().charAt(0);
  		System.out.print("Enter Name: ");
  		x = in.nextLine();
		name.append(x);

		System.out.print("Enter Address: ");
  		x = in.nextLine();
		address.append(x);

		System.out.print("Enter Phone: ");
  		x = in.nextLine();
		phone.append(x);

  		System.out.print("Enter Email: ");
  		x = in.nextLine();
		email.append(x);
	}

	/*
	Type -> print
	Input -> none
	Output -> none
	Purpose -> to print the details of a Person
	*/
    public void print()
	{
		System.out.println("Name: " + name);
		System.out.println("ID Number: " + id_num);
		System.out.println("Address: " + address);
		System.out.println("Phone: " + phone);
		System.out.println("Email: " + email);
	}

} 
